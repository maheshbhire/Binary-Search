
  int mainans(vector<int>&arr,int limit){
      int n=arr.size();
      int  j=0;
      int count=1;
      int ans=0;
              
        while(ans<=limit && j<n){
            if( ans+arr[j]>limit){            
                count++;
                ans=arr[j];


            } else {
                ans += arr[j];
                
            }
            j++;
        }
        return count;
       
  }


int findPages(vector<int>& arr, int n, int m) {
    // Write your code here.
 
 if(m>n){
     return -1;
 }

 int low = *std::max_element(arr.begin(), arr.end());
    int high = std::accumulate(arr.begin(), arr.end(), 0);


 while(low<=high){
     int mid=(low+high)/2;
     int val=mainans(arr,  mid);
   
      if(val>m){
         low=mid+1;
     }
     else {
         high=mid-1;
     }
 }
 return low;

      
  
    
}